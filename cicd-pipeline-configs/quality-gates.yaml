# Quality Gates Configuration
# Spring Boot Application

quality_gates:
  # Global Configuration
  enabled: true
  fail_pipeline_on_failure: true
  
  # Test Coverage Gates
  test_coverage:
    enabled: true
    minimum_coverage: 80.0
    coverage_type: "line"
    
    thresholds:
      excellent: 90.0
      good: 80.0
      acceptable: 70.0
      poor: 60.0
      
    exclusions:
      packages:
        - "com.myapp.config"
        - "com.myapp.Application"
      files:
        - "**/*Config.java"
        - "**/*Application.java"
        - "**/*Exception.java"
        
    reporting:
      formats: ["HTML", "XML", "CSV"]
      include_branch_coverage: true
      
  # Code Quality Gates
  code_quality:
    enabled: true
    
    metrics:
      # Complexity
      cyclomatic_complexity:
        enabled: true
        max_complexity: 10
        
      # Duplication
      code_duplication:
        enabled: true
        max_duplication_percentage: 3.0
        min_duplication_lines: 10
        
      # Size
      method_length:
        enabled: true
        max_lines: 50
        
      class_length:
        enabled: true
        max_lines: 500
        
      # Documentation
      javadoc_coverage:
        enabled: true
        minimum_coverage: 60.0
        
  # Security Gates
  security:
    enabled: true
    
    vulnerability_thresholds:
      critical: 0
      high: 2
      medium: 10
      low: 50
      
    security_hotspots:
      max_open_hotspots: 5
      require_review: true
      
  # Performance Gates
  performance:
    enabled: false  # Disabled for now
    
    thresholds:
      response_time_p95: 200  # milliseconds
      error_rate: 0.1  # percentage
      throughput_min: 100  # requests per second
      
  # Dependency Gates
  dependencies:
    enabled: true
    
    outdated_dependencies:
      max_major_behind: 1
      max_minor_behind: 3
      max_patch_behind: 10
      
    license_compliance:
      allowed_licenses:
        - "MIT"
        - "Apache-2.0"
        - "BSD-3-Clause"
        - "BSD-2-Clause"
      
      forbidden_licenses:
        - "GPL-3.0"
        - "AGPL-3.0"
        
  # Build Gates
  build:
    enabled: true
    
    compilation:
      fail_on_warnings: false
      max_warnings: 50
      
    tests:
      require_all_tests_pass: true
      max_test_execution_time: 300  # seconds
      
  # Documentation Gates
  documentation:
    enabled: true
    
    api_documentation:
      require_swagger: true
      min_endpoint_coverage: 80.0
      
    readme:
      require_readme: true
      min_length: 500  # characters
      
# Reporting Configuration
reporting:
  # Report Generation
  generate_reports: true
  
  formats:
    - "HTML"
    - "JSON"
    - "XML"
    
  # Report Storage
  upload_artifacts: true
  retention_days: 30
  
  # Notifications
  notifications:
    on_failure: true
    on_threshold_breach: true
    
    channels:
      - type: "github_check"
        enabled: true
        
      - type: "github_comment"
        enabled: true
        on_pr_only: true
        
      - type: "email"
        enabled: false
        recipients: ["team@example.com"]
        
# Environment-specific Overrides
environments:
  dev:
    test_coverage:
      minimum_coverage: 70.0
    security:
      vulnerability_thresholds:
        critical: 1
        high: 5
        
  staging:
    test_coverage:
      minimum_coverage: 80.0
    security:
      vulnerability_thresholds:
        critical: 0
        high: 2
        
  prod:
    test_coverage:
      minimum_coverage: 85.0
    security:
      vulnerability_thresholds:
        critical: 0
        high: 0
        
# Integration Configuration
integrations:
  # SonarQube
  sonarqube:
    enabled: false
    server_url: "https://sonarqube.example.com"
    project_key: "spring-boot-app"
    
  # CodeClimate
  codeclimate:
    enabled: false
    test_reporter_id: "${CODECLIMATE_TEST_REPORTER_ID}"
    
  # JaCoCo
  jacoco:
    enabled: true
    maven_plugin: "org.jacoco:jacoco-maven-plugin"
    
# Custom Rules
custom_rules:
  # Spring Boot specific rules
  spring_boot:
    - rule: "no_system_out_println"
      description: "Avoid System.out.println in production code"
      pattern: "System\.out\.println"
      severity: "warning"
      
    - rule: "require_controller_validation"
      description: "Controller methods should have validation"
      pattern: "@RequestMapping.*@Valid"
      severity: "info"
      
  # General Java rules
  java:
    - rule: "no_empty_catch_blocks"
      description: "Catch blocks should not be empty"
      severity: "error"
      
    - rule: "require_logger_final"
      description: "Logger fields should be final"
      pattern: "private static final Logger"
      severity: "warning"